/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package studentinfomationsystem;

/**
 *
 * @author PQD
 */
import Database.DBAction;
import Database.DBConnection;
import com.sun.corba.se.impl.protocol.giopmsgheaders.Message;
import java.awt.Button;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.*;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import studentinfomationclass.AYearStudent;
import studentinfomationclass.Class_;
import studentinfomationclass.CreditStudent;
import studentinfomationclass.Department;
import studentinfomationclass.SignUp;
import studentinfomationclass.Student;
import studentinfomationclass.Subject;
import studentinfomationclass.Teacher;
import java.lang.Object;

public class DangKiHocPhan extends javax.swing.JPanel {

    /**
     * Creates new form DangKiHocPhan
     */
    public DangKiHocPhan() {
        initComponents();

    }
    private final String TinChi = "Tín chỉ";
    private final int CreMax = 20;
    private boolean check = false;
    private DefaultTableModel modeltable_2 = new DefaultTableModel();
    private DefaultTableModel modeltable_1 = new DefaultTableModel();
    private final int size = 20; // số đối tượng môn max
    private static String idSubj_global = null;
    private static CreditStudent cr = new CreditStudent();

    private Object[] loadColumnName() {
        return new Object[]{"Mã học phần", "Mã lớp", "Tên môn học", "Số TC", "Học kì", "Ngành"};
    }

    private Object[] loadColumnName_2() {
        return new Object[]{"Mã học phần", "Mã lớp", "Tên môn học", "Số TC", "Học kì", "Ngành"};
    }

    private Object[][] loadRowData(String pos0, String pos_1, String pos_2, String pos_3, String pos_4, String pos_5) {
        return new Object[][]{{pos0, pos_1, pos_2, pos_3, pos_4, pos_5}};
    }

    private Object[] loadRowData_2(String pos0, String pos_1, String pos_2, String pos_3, String pos_4, String pos_5) {
        return new Object[]{pos0, pos_1, pos_2, pos_3, pos_4, pos_5};
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        hocPhanLabel = new javax.swing.JLabel();
        hocPhanTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        topLabel = new javax.swing.JLabel();

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        hocPhanLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        hocPhanLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        hocPhanLabel.setText("Mã lớp");

        hocPhanTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hocPhanTextFieldActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã môn", "Mã lớp", "Tên môn học", "Số TC", "Học kì", "Ngành"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Đăng ký");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("jLabel1");

        jLabel2.setText("MSSV:");

        jButton2.setText("Tìm kiếm");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Hệ:");

        jLabel4.setText("jLabel4");

        jLabel5.setText("Môn đã đăng ký");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã môn", "Mã lớp", "Tên môn học", "Số TC", "Học kì", "Ngành"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jLabel6.setText("Tổng số tín đã đăng ký:");

        jLabel7.setText("jLabel7");

        jLabel8.setText("Số tín tối đa                 :");

        jLabel9.setText("jLabel9");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(40, 40, 40))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(hocPhanLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(hocPhanTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 598, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 598, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(90, 90, 90)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel9))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel7)))
                                .addGap(54, 54, 54)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hocPhanTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hocPhanLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(28, 28, 28))))
        );

        topLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        topLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        topLabel.setText("Đăng kí Học phần");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(topLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(topLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    private void query() {
        String text = hocPhanTextField.getText();
        ArrayList ar = new ArrayList();
        ar = DBAction.selectInfoClass(text);
        if (ar == null) {
            JOptionPane.showMessageDialog(null, "Lớp học không tồn tại", "Lỗi đăng ký", JOptionPane.ERROR_MESSAGE);
        } else {
            TableModel dataModel = new DefaultTableModel(loadRowData(ar.get(5).toString(), ar.get(0).toString(), ar.get(1).toString(),
                    ar.get(2).toString(), ar.get(3).toString(), ar.get(4).toString()), loadColumnName());
            jTable1.setModel(dataModel);
            setIdSub(ar.get(5).toString());
        }
    }

    protected void query_2() {
        ArrayList listSignUp = new ArrayList();
        Object[] oj = loadColumnName_2();
        for (int i = 0; i < oj.length; i++) {
            modeltable_2.addColumn(oj[i]);
        }
        jLabel9.setText(String.valueOf(CreMax));
        int idStu = Integer.parseInt(jLabel1.getText());
        listSignUp = DBAction.addSubject(check, idStu, size);
        for (int i = 0; i < listSignUp.size() - 1; i++) {
            if ((i + 1) % 6 == 0) {
                Object[] rowData = loadRowData_2(listSignUp.get(i - 5).toString(), listSignUp.get(i - 4).toString(),
                        listSignUp.get(i - 3).toString(), listSignUp.get(i - 2).toString(),
                        listSignUp.get(i - 1).toString(), listSignUp.get(i).toString());
                modeltable_2.addRow(rowData);
            }
        }
        cr = DBAction.selectCreditStudent("mssv", jLabel1.getText());
        cr.setSoTC(Integer.parseInt(listSignUp.get(listSignUp.size() - 1).toString()));
        cr.setSoTCMax(CreMax);
        jLabel7.setText(String.valueOf(cr.getSoTC()));
        jTable2.setModel(modeltable_2);

    }
    private void hocPhanTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hocPhanTextFieldActionPerformed
        // TODO add your handling code here:
        if (jLabel4.getText().equals(TinChi)) {
            if (hocPhanTextField.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Bạn chưa nhập tên môn học", "Lỗi tìm kiếm", JOptionPane.ERROR_MESSAGE);
            } else {
                query();
            }
        }
    }//GEN-LAST:event_hocPhanTextFieldActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String text = hocPhanTextField.getText();
        Class_ cl = new Class_();
        cl = DBAction.selectClass("idlop", text);
        if (jLabel4.getText().equals(TinChi)) {
            if ((hocPhanTextField.getText()).equals("")) {
                JOptionPane.showMessageDialog(null, "Bạn chưa nhập tên môn học", "Lỗi đăng ký", JOptionPane.ERROR_MESSAGE);
            } else if (DBAction.checkMon(Integer.parseInt(jLabel1.getText()), Integer.parseInt(hocPhanTextField.getText())) == 0) {
                JOptionPane.showMessageDialog(null, "Chưa đủ điều kiện đăng ký", "Lỗi đăng ký", JOptionPane.ERROR_MESSAGE);
            } else {
                if (!cr.themMonHoc(cl.getSbj())) {
                    JOptionPane.showMessageDialog(null, "Vượt quá số tín chỉ giới hạn", "Lỗi đăng ký", JOptionPane.ERROR_MESSAGE);
                } else {
                    boolean check_1 = true;
                    ArrayList<Subject> ar = new ArrayList();
                    ar = DBAction.selectDangKi("sinhvien_mssv", jLabel1.getText());
                    Class_ clas = new Class_();
                    clas = DBAction.selectClass("idlop", hocPhanTextField.getText());
                    for (int i = 0; i < ar.size(); i++) {
                        int idCl = ar.get(i).getCl().getIdClass();
                        String idClTxt = String.valueOf(idCl);
                        int idSubj = ar.get(i).getIdSbj();
                        String idSubjTxt = String.valueOf(idSubj);
                        if (idClTxt.equals(hocPhanTextField.getText())) {
                            check_1 = false;
                            JOptionPane.showMessageDialog(null, "Lớp học này đã được đăng ký", "Lỗi đăng ký", JOptionPane.ERROR_MESSAGE);
                            break;
                        } else if (idSubjTxt.equals(String.valueOf(clas.getSbj().getIdSbj()))) {
                            check_1 = false;
                            JOptionPane.showMessageDialog(null, "Mã học phần này đã được đăng ký", "Lỗi đăng ký", JOptionPane.ERROR_MESSAGE);
                            break;
                        }
                    }
                    if (check_1 == true) {
                        themMonHoc();
                        JOptionPane.showMessageDialog(null, "Đăng ký thành công", "Thành công", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (jLabel4.getText().equals(TinChi)) {
            if (hocPhanTextField.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Bạn chưa nhập tên môn học", "Lỗi tìm kiếm", JOptionPane.ERROR_MESSAGE);
            } else {
                query();
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    public void themMonHoc() {
        String text = hocPhanTextField.getText();
        String idStudent = jLabel1.getText();
        int idS = Integer.parseInt(idStudent);
        ArrayList addSub = DBAction.addSubject(text, idStudent);
        if (addSub == null) {
            JOptionPane.showMessageDialog(null, "Học phần không có lớp", "Lỗi đăng ký", JOptionPane.ERROR_MESSAGE);
        } else {
            Object[] oj = loadRowData_2(addSub.get(0).toString(), addSub.get(1).toString(),
                    addSub.get(2).toString(), addSub.get(3).toString(),
                    addSub.get(4).toString(), addSub.get(5).toString());
            modeltable_2.addRow(oj);
            DBAction.insertDangKi(idS, Integer.parseInt(addSub.get(1).toString()));
            cr.setSoTC(cr.getSoTC());
            jLabel7.setText(String.valueOf(cr.getSoTC()));
            jTable2.setModel(modeltable_2);
        }
    }

    public void setIdSub(String id) {
        idSubj_global = id;
    }

    public void setID(String MaId) {
        jLabel1.setText(MaId);
    }

    public void setTypeTS(String maid) {
        jLabel4.setText(maid);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel hocPhanLabel;
    private javax.swing.JTextField hocPhanTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel topLabel;
    // End of variables declaration//GEN-END:variables
}
